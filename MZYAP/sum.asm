;---------------------------СУММАТОР------------------------------------------
.model tiny
.186	;Разрешение трансляции команд процессора 80186
;-----------------------------------------------------------------------------	
.code					
org 100h 
;-----------------------------------------------------------------------------	 	 	 
start:	
	mov	 ax, LEN	; получем длину массива, но так как длина
	mov	 cl, 2		; по байтам, а вот сами элементы dw - 2 байта
	div	 cl			; делим на 2 чтобы узнать количество элементов
	mov	 cl, al		; передаем cl (cx) для счетчика
	mov  bx, 03A0h	; адрес первого элемента - по условии ds:03A0h (можно NUMS)
	sub  ax, ax	 	; очищаем ax - будет выступать в роли сумматора
sumLoop:			; базовая адресация - база ds смещение bx
	add  ax, [bx]	; суммируем bx и ax, [bx] - значение 
	add  bx, 2		; свдигаем на два байта  bx - адрес 
	loop sumLoop	; пока cx не ноль
	mov	 SUM, ax   ; сохраняем сумму (удобное было бы использовать стек но по условии com программа)
	mov  bx, 1000h	; подготовливаем деление dx:ax / bx	
printLoop:	
	; код далее при каждом повторе результат делит на 1000h 
	; и получает первое число, что и печатает, далее сдвигает на лево 
	; пока рег. ax не станет нулем. фактический 4 раза
	sub	 dx, dx		; очищаем dx
	div  bx			; после деления ax - div, dx - mod 
	mov  dx, ax		; в ax хранится первое число результата
	call print		; вызывем процедуру печати
	mov  ax, SUM	; извлекаем ax из стека
	shl	 ax, 4		; сдвигаем на 4 бита влего 3102 -> 1020
	mov  SUM, ax	; сного добавляем в стек
	cmp	 ax, 0		; сравниваем с нулем (ax - 0 если ax ноль то ZF включен
	jz	 fin		; если ZF == 1
	jmp printLoop	; пригаем к установленной метке
fin:	
	mov ah, 4ch	 	; код прерывании - завершения программы с кодом возврата 0
	int 21h			; прерывание
;----------------Процедура печати шест. символа -------------------------------		
print proc 	near		
	mov  ah, 02h	; код прерывании - вывод на экран символа с кодом dl
	add  dl, 30h	; так как печатем число то корректируем 0 - 9
	cmp	 dl, 39h 	; проверка если A - F
	jns	 simbol		; если A - F
	jmp	 output		; сразу прыгаем на output
simbol:	
	add	 dl, 7h		; корректируем
output:	
	int  21h		; прерывание
	ret				; возврат из процкдуры
print endp
org 03A0h			; cмещение относительно ds
	; dw = слово = 2 байт		
	dw	 31, 2567, 4287, 113, 5548	; числа из задании
	; LEN - размер массива по байтам = 5 * dw = 5 * 2 = 10
	LEN  dw	 $-03A0h
	SUM	 dw  ?
end start